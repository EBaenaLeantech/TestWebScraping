// <auto-generated />
using System;
using DAT_Download_Service;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAT_Download_Service.Migrations
{
    [DbContext(typeof(DownloadContext))]
    partial class DownloadContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAT_Download_Service.Models.ContractRateDataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AccessorialsExcludingFuel")
                        .HasColumnType("float");

                    b.Property<double>("AvgLinehaulRate")
                        .HasColumnType("float");

                    b.Property<int>("Companies")
                        .HasColumnType("int");

                    b.Property<int>("DATRateDataId")
                        .HasColumnType("int");

                    b.Property<string>("DestinationGeoExpansion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FuelSurcharge")
                        .HasColumnType("float");

                    b.Property<double>("HighLinehaulRate")
                        .HasColumnType("float");

                    b.Property<double>("LinehaulRateStdDev")
                        .HasColumnType("float");

                    b.Property<double>("LowLinehaulRate")
                        .HasColumnType("float");

                    b.Property<string>("OriginGeoExpansion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Reports")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DATRateDataId")
                        .IsUnique();

                    b.ToTable("ContractRateDataModel");
                });

            modelBuilder.Entity("DAT_Download_Service.Models.DATRateData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataDownloadDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestinationCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationGeoLabelLong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationGeoLabelShort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OriginCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginGeoLabelLong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginGeoLabelShort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginGeoType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PCMilerPracticalMileage")
                        .HasColumnType("int");

                    b.Property<string>("TruckType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DatRatesData");
                });

            modelBuilder.Entity("DAT_Download_Service.Models.SpotRateDataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AvgLinehaulRate")
                        .HasColumnType("float");

                    b.Property<int>("Companies")
                        .HasColumnType("int");

                    b.Property<int>("DATRateDataId")
                        .HasColumnType("int");

                    b.Property<string>("DestinationGeoExpansion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FuelSurcharge")
                        .HasColumnType("float");

                    b.Property<double>("HighLinehaulRate")
                        .HasColumnType("float");

                    b.Property<double>("LinehaulRateStdDev")
                        .HasColumnType("float");

                    b.Property<double>("LowLinehaulRate")
                        .HasColumnType("float");

                    b.Property<string>("OriginGeoExpansion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Reports")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DATRateDataId")
                        .IsUnique();

                    b.ToTable("SpotRateDataModel");
                });

            modelBuilder.Entity("DAT_Download_Service.Models.ContractRateDataModel", b =>
                {
                    b.HasOne("DAT_Download_Service.Models.DATRateData", null)
                        .WithOne("ContractRateData")
                        .HasForeignKey("DAT_Download_Service.Models.ContractRateDataModel", "DATRateDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAT_Download_Service.Models.SpotRateDataModel", b =>
                {
                    b.HasOne("DAT_Download_Service.Models.DATRateData", null)
                        .WithOne("SpotRateData")
                        .HasForeignKey("DAT_Download_Service.Models.SpotRateDataModel", "DATRateDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
